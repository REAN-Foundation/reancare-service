meta {
  name: Update
  type: http
  seq: 3
}

put {
  url: {{BASE_URL}}/clinical/maternity/maternity-deliveries/{{DELIVERY_ID}}/postnatal-medications/{{POSTNATAL_MEDICATION_ID}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{ADMIN_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "PostNatalVisitId": "{{POSTNATAL_VISIT_ID}}",
      "DeliveryId": "{{DELIVERY_ID}}",
      "VisitId": "{{VISIT_ID}}",
      "Name": "IbugesicPlus",
      "Given": "None",
      "MedicationId": "d1234567-89ab-cdef-0123-456789abcdef"
  }
  
}

tests {
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Postnatal medication record updated successfully!", function () {
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('PostnatalMedication');
      
      expect(jsonRes.Data.PostnatalMedication).to.have.property('PostNatalVisitId');
      expect(jsonRes.Data.PostnatalMedication).to.have.property('DeliveryId');
      expect(jsonRes.Data.PostnatalMedication).to.have.property('VisitId');
      expect(jsonRes.Data.PostnatalMedication).to.have.property('Name');
      expect(jsonRes.Data.PostnatalMedication).to.have.property('Given');
      expect(jsonRes.Data.PostnatalMedication).to.have.property('MedicationId');
  });
  
}

meta {
  name: Add symptoms to template
  type: http
  seq: 3
}

post {
  url: {{BASE_URL}}/clinical/symptom-assessment-templates/{{ASSESSMENT_TEMPLATE_ID}}/add-symptom-types
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  authorization: Bearer {{PATIENT_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
}

body:json {
  {
      "SymptomTypeIds": [
          "{{SYMPTOM_TYPE_FACIAL_DROPPING_ID}}",
          "{{SYMPTOM_TYPE_HEADACHE_ID}}",
          "{{SYMPTOM_TYPE_DIFFICULLTY_WITH_SPEECH_ID}}",
          "{{SYMPTOM_TYPE_DIZZINESS_ID}}",
          "{{SYMPTOM_TYPE_CONFUSION_ID}}",
          "{{SYMPTOM_TYPE_ID_12}}",
          "{{SYMPTOM_TYPE_WEAKNESS_IN_ARMS_ID}}"
      ]
  }
}

tests {
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Symptom types are added to the template", function () {
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('SymptomAssessmentTemplate');
      expect(jsonRes.Data.SymptomAssessmentTemplate).to.have.property('id');
      expect(jsonRes.Data.SymptomAssessmentTemplate).to.have.property('Title');
      expect(jsonRes.Data.SymptomAssessmentTemplate).to.have.property('Description');
      expect(jsonRes.Data.SymptomAssessmentTemplate).to.have.property('Tags');
      expect(jsonRes.Data.SymptomAssessmentTemplate).to.have.property('TemplateSymptomTypes');
  
      expect(jsonRes.Data.SymptomAssessmentTemplate.Tags.length).greaterThan(0);
  });
  
}

meta {
  name: Update meditation record by id
  type: http
  seq: 3
}

put {
  url: {{BASE_URL}}/wellness/exercise/meditations/{{EXERCISE_MEDITATION_ID}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{PATIENT_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "PatientUserId": "{{PATIENT_USER_ID}}",
      "Meditation": "Breathing",
      "Description": "",
      "Category": "Mindfulness",
      "StartTime": "2021-09-22T06:30:00.000Z",
      "EndTime": "2021-09-22T06:45:00.000Z"
  }
}

tests {
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Updated meditation record is returned", function () {
  
      var expectedValue = "Breathing";
      var expectedStartTime = "2021-09-22T06:30:00.000Z";
      var expectedEndTime = "2021-09-22T06:45:00.000Z";
      
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('Meditation');
      expect(jsonRes.Data.Meditation).to.not.be.empty;
      expect(jsonRes.Data.Meditation).to.have.property('Meditation');
      expect(jsonRes.Data.Meditation).to.have.property('StartTime');
      expect(jsonRes.Data.Meditation).to.have.property('EndTime');
  
      expect(jsonRes.Data.Meditation.Meditation).equals(expectedValue);
      expect(jsonRes.Data.Meditation.StartTime).equals(expectedStartTime);
      expect(jsonRes.Data.Meditation.EndTime).equals(expectedEndTime);
      
  });
  
  
}

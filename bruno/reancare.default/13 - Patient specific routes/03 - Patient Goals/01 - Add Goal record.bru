meta {
  name: Add Goal record
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/patient-goals
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{PATIENT_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "PatientUserId": "{{GOAL_PATIENTUSERID}}",
      "Title": "Daily walk",
      "CarePlanId": {{GOAL_CAREPLANID}},
      "TypeCode": {{GOAL_TYPECODE}},
      "TypeName": "{{GOAL_TYPENAME}}",
      "GoalAchieved": {{GOAL_GOALACHIEVED}},
      "GoalAbandoned": {{GOAL_GOALABANDONED}}
  }
}

script:pre-request {
  var userId = bru.getEnvVar("PATIENT_USER_ID");
  bru.setEnvVar("GOAL_PATIENTUSERID", userId);
  bru.setEnvVar("GOAL_CAREPLANID", 1);
  bru.setEnvVar("GOAL_TYPECODE", 1);
  bru.setEnvVar("GOAL_TYPENAME", "Name");
  bru.setEnvVar("GOAL_GOALACHIEVED", true);
  bru.setEnvVar("GOAL_GOALABANDONED",false);
}

tests {
  var jsonRes = res.getBody();
  
  try {
      bru.setEnvVar("GOAL_ID", jsonRes.Data.Goal.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("New Goal record is created", function () {
  
      var expectedPatientUserId = bru.getEnvVar("GOAL_PATIENTUSERID");
      var expectedGoalAchieved = bru.getEnvVar("GOAL_GOALACHIEVED");
      var expectedGoalAbandoned = bru.getEnvVar("GOAL_GOALABANDONED");
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('Goal');
      expect(jsonRes.Data.Goal).to.not.be.empty;
      expect(jsonRes.Data.Goal).to.have.property('id');
      expect(jsonRes.Data.Goal).to.have.property('PatientUserId');
      expect(jsonRes.Data.Goal).to.have.property('GoalAchieved');
      expect(jsonRes.Data.Goal).to.have.property('GoalAbandoned');
  
      expect(jsonRes.Data.Goal.PatientUserId).equals(expectedPatientUserId);
      expect(jsonRes.Data.Goal.GoalAchieved).equals(expectedGoalAchieved);
      expect(jsonRes.Data.Goal.GoalAbandoned).equals(expectedGoalAbandoned);
  
  });
  
}

docs {
  Create new Goal record
}

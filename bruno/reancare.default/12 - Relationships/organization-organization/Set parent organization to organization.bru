meta {
  name: Set parent organization to organization
  type: http
  seq: 1
}

put {
  url: {{BASE_URL}}/organizations/{{ORGANIZATION_ID}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{ADMIN_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "ParentOrganizationId": "{{PARENT_ORGANIZATION_ID}}"
  }
}

tests {
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Parent organization is set", function () {
  
      var expectedParentOrganizationId = bru.getEnvVar("PARENT_ORGANIZATION_ID");
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('Organization');
      expect(jsonRes.Data.Organization).to.not.be.empty;
      expect(jsonRes.Data.Organization).to.have.property('id');
      expect(jsonRes.Data.Organization).to.have.property('ParentOrganization');
  
      expect(jsonRes.Data.Organization.ParentOrganization.id).equals(expectedParentOrganizationId);
  });
  
  
}

docs {
  Get an address by address id.
}

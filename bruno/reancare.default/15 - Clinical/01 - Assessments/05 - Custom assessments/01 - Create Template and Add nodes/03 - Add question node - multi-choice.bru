meta {
  name: Add question node - multi-choice
  type: http
  seq: 3
}

post {
  url: {{BASE_URL}}/clinical/assessment-templates/{{ASSESSMENT_TEMPLATE_ID}}/nodes
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{DOCTOR_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "ParentNodeId": "{{ASSESSMENT_TEMPLATE_ROOT_NODE_ID}}",
      "NodeType": "Question",
      "Title": "What are your preferred activity selections?",
      "QueryResponseType": "Multi Choice Selection",
      "Options": [
          {
              "Text": "Walking",
              "Sequence": 1
          },
          {
              "Text": "Sports",
              "Sequence": 2
          },
          {
              "Text": "Hiking",
              "Sequence": 3
          },
          {
              "Text": "Cycling",
              "Sequence": 4
          },
          {
              "Text": "Yoga",
              "Sequence": 5
          }
      ]
  }
  
}

tests {
  var jsonRes = res.getBody();
  
  try {
      bru.setEnvVar("ASSESSMENT_NODE_02_ID", jsonRes.Data.AssessmentNode.id);
      bru.setEnvVar("ASSESSMENT_NODE_ID", jsonRes.Data.AssessmentNode.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Assessment question node - multi choice selection is created", function () {
     
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('AssessmentNode');
      expect(jsonRes.Data.AssessmentNode).to.not.be.empty;
      expect(jsonRes.Data.AssessmentNode).to.have.property('id');
      expect(jsonRes.Data.AssessmentNode).to.have.property('ParentNodeId');
      expect(jsonRes.Data.AssessmentNode).to.have.property('NodeType');
      expect(jsonRes.Data.AssessmentNode).to.have.property('Title');
      expect(jsonRes.Data.AssessmentNode).to.have.property('QueryResponseType');
      expect(jsonRes.Data.AssessmentNode).to.have.property('TemplateId');
      
      expect(jsonRes.Data.AssessmentNode.Title).equals("What are your preferred activity selections?");
      expect(jsonRes.Data.AssessmentNode.QueryResponseType).equals("Multi Choice Selection");
      expect(jsonRes.Data.AssessmentNode.NodeType).equals("Question");
              
      expect(jsonRes.Data.AssessmentNode.Sequence).greaterThan(0);
  });
  
}

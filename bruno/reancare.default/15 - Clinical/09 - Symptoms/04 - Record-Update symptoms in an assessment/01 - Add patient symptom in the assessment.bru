meta {
  name: Add patient symptom in the assessment
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/clinical/symptoms
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  authorization: Bearer {{PATIENT_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
}

body:json {
  {
      "PatientUserId": "{{PATIENT_USER_ID}}",
      "AssessmentId": "{{SYMPTOM_ASSESSMENT_ID}}",
    "SymptomTypeId": "{{SYMPTOM_TYPE_ID}}",
      "IsPresent": true,
      "Severity": 1,
    "Status": 1,
    "Interpretation": 1,
    "Comments": "The chronic hypertension for the patient with critically high levels."
  }
}

tests {
  try {
      var jsonData = res.getBody();
      var id = jsonData.Data.Symptom.id;
      bru.setEnvVar("PATIENT_SYMPTOM_ID", id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("New symptom is created", function () {
  
      var assessmentId = bru.getEnvVar("SYMPTOM_ASSESSMENT_ID");
      var assessmentTemplateId = bru.getEnvVar("ASSESSMENT_TEMPLATE_ID");
      var symptomTypeId = bru.getEnvVar("SYMPTOM_TYPE_FACIAL_DROPPING_ID");
      var symptomName = "Headache";
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('Symptom');
      expect(jsonRes.Data.Symptom).to.have.property('id');
      expect(jsonRes.Data.Symptom).to.have.property('PatientUserId');
      expect(jsonRes.Data.Symptom).to.have.property('Symptom');
      expect(jsonRes.Data.Symptom).to.have.property('AssessmentTemplateId');
      expect(jsonRes.Data.Symptom).to.have.property('Severity');
      expect(jsonRes.Data.Symptom).to.have.property('ValidationStatus');
      expect(jsonRes.Data.Symptom).to.have.property('Interpretation');
      expect(jsonRes.Data.Symptom).to.have.property('RecordDate');
  
      expect(jsonRes.Data.Symptom.AssessmentTemplateId).equals(assessmentTemplateId);
      expect(jsonRes.Data.Symptom.AssessmentId).equals(assessmentId);
      expect(jsonRes.Data.Symptom.Symptom).equals(symptomName);
      expect(jsonRes.Data.Symptom.SymptomTypeId).equals(symptomTypeId);
  });
  
}

# This workflow will trigger pull requests and apply a label based on the
# paths that are modified in the pull request.
#
# To use this workflow, you will need to set up a .github/labeler.yml
# file with configuration.  For more information, see:
# https://github.com/actions/labeler

name: UAT-CI-CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the develop branch
  
  pull_request:
    branches: main
  
  push:
    branches:
      - 'release/**'
      - '!release/aha**'   # excludes master

jobs:
  CodeScan-ESLint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: docker://ghcr.io/github/super-linter:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: /
          TYPESCRIPT_ES_CONFIG_FILE: .eslintrc.json
          VALIDATE_TYPESCRIPT_ES: true
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          
  Label_Checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Check labels
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker://agilepathway/pull-request-label-checker:latest
        with:
          one_of: major,minor,patch
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  Deploy-ECS:
    if: ${{ github.event_name == 'push' }}
    environment: uat
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "branch=$(echo ${GITHUB_REF#refs/heads/} | sed "s/\\//-/g")" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "repo_name=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')" >> $GITHUB_OUTPUT  
      
      - name: setup aws and build image
        uses: ./.github/actions/setup_aws
        with:
          duplo_token: ${{ secrets.DUPLOCLOUD_TOKEN }}
          tenant: uat
          aws-region: ${{ secrets.AWS_REGION }}
          image_tag: reancare-service-dev-uat:${{ steps.vars.outputs.branch }}_${{ steps.vars.outputs.sha_short }}
          task_def: ${{ secrets.TASK_DEFINTION_NAME }}
          service_name: ${{ secrets.SERVICE_NAME }}
          duplo_id: ${{ secrets.DUPLO_ID }}
          duplocloud_token: ${{ secrets.DUPLOCLOUD_TOKEN }}

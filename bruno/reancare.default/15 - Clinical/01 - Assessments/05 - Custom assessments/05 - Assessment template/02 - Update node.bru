meta {
  name: Update node
  type: http
  seq: 4
}

put {
  url: {{BASE_URL}}/clinical/assessment-templates/{{ASSESSMENT_TEMPLATE_ID}}/nodes/{{ASSESSMENT_NODE_ID}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{ADMIN_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "Title": "Please visit your doctor",
      "Sequence": 15,
      "Description": "Please make time to consult your doctor."
  }
  
}

tests {
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Get assessment node", function () {
     
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('AssessmentNode');
      expect(jsonRes.Data.AssessmentNode).to.not.be.empty;
      expect(jsonRes.Data.AssessmentNode).to.have.property('id');
      expect(jsonRes.Data.AssessmentNode).to.have.property('ParentNodeId');
      expect(jsonRes.Data.AssessmentNode).to.have.property('NodeType');
      expect(jsonRes.Data.AssessmentNode).to.have.property('Title');
      expect(jsonRes.Data.AssessmentNode).to.have.property('Description');
      expect(jsonRes.Data.AssessmentNode).to.have.property('TemplateId');
      
      expect(jsonRes.Data.AssessmentNode.Sequence).greaterThan(0);
  });
  
}

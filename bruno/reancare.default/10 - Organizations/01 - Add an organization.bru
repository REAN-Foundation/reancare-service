meta {
  name: Add an organization
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/organizations
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{PATIENT_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "Type": "{{ORGANIZATION_TYPE}}",
      "Name": "{{ORGANIZATION_NAME}}",
      "ContactPhone": "{{CONTACT_ORGANIZATION_PHONE}}",
      "ContactEmail": "{{CONTACT_ORGANIZATION_EMAIL}}",
      "About": "{{ABOUT_ORGANIZATION}}",
      "OperationalSince": "{{ORGANIZATION_OPERATIONAL_SINCE}}",
      "AddressId": "{{ADDRESS_ID}}",
      "ImageResourceId": "80eb4c8b-f302-4612-9fe9-f832c6eb401f",
      "IsHealthFacility": true
  }
}

script:pre-request {
  
  bru.setEnvVar("ORGANIZATION_TYPE", 'Clinic');
  bru.setEnvVar("ORGANIZATION_NAME", 'Shree Clinic');
  bru.setEnvVar("CONTACT_ORGANIZATION_PHONE", '+91-1234567890');
  bru.setEnvVar("CONTACT_ORGANIZATION_EMAIL", 'xyz@gmail.com');
  bru.setEnvVar("ABOUT_ORGANIZATION", 'Shree Gastroenterology & Endoscopy Clinic');
  bru.setEnvVar("ORGANIZATION_OPERATIONAL_SINCE", '2017-05-08');
  bru.setEnvVar("ORGANIZATION_IMAGE_RESOURCE_ID", '80eb4c8b-f302-4612-9fe9-f832c6eb401f');
  
}

tests {
  var jsonRes = res.getBody();
  
  try {
      bru.setEnvVar("ORGANIZATION_ID", jsonRes.Data.Organization.id);
      bru.setEnvVar("PARENT_ORGANIZATION_ID", jsonRes.Data.Organization.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("New organization is created", function () {
  
      var expectedType = bru.getEnvVar("ORGANIZATION_TYPE");
      var expectedName = bru.getEnvVar("ORGANIZATION_NAME");
      var expectedContactPhone = bru.getEnvVar("CONTACT_ORGANIZATION_PHONE");
      var expectedContactEmail = bru.getEnvVar("CONTACT_ORGANIZATION_EMAIL");
      var expectedOperationalSince = bru.getEnvVar("ORGANIZATION_OPERATIONAL_SINCE");
      var expectedIsHealthFacility = true;
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('Organization');
      expect(jsonRes.Data.Organization).to.not.be.empty;
      expect(jsonRes.Data.Organization).to.have.property('id');
      expect(jsonRes.Data.Organization).to.have.property('Type');
      expect(jsonRes.Data.Organization).to.have.property('Name');
      expect(jsonRes.Data.Organization).to.have.property('ContactEmail');
      expect(jsonRes.Data.Organization).to.have.property('ContactPhone');
      expect(jsonRes.Data.Organization).to.have.property('OperationalSince');
      expect(jsonRes.Data.Organization).to.have.property('IsHealthFacility');
  
      var opSince = jsonRes.Data.Organization.OperationalSince;
      if(opSince){
          opSince = opSince.split('T')[0];
      }
  
      expect(jsonRes.Data.Organization.Type).equals(expectedType);
      expect(jsonRes.Data.Organization.Name).equals(expectedName);
      expect(jsonRes.Data.Organization.ContactEmail).equals(expectedContactEmail);
      expect(jsonRes.Data.Organization.ContactPhone).equals(expectedContactPhone);
      expect(opSince).equals(expectedOperationalSince);
      expect(jsonRes.Data.Organization.IsHealthFacility).equals(expectedIsHealthFacility);
  
  });
  
  
}

docs {
  Add an address.
}

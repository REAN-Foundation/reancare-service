meta {
  name: Add knowledge nugget record
  type: http
  seq: 1
}

post {
  url: {{BASE_URL}}/educational/knowledge-nuggets
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{ADMIN_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "TopicName": "Some topic",
      "BriefInformation": "Brief information for topic",
      "DetailedInformation": "Detailed information for the topic",
      "AdditionalResources": [],
      "Tags": [
          "BP"
      ]
  }
}

tests {
  var jsonRes = res.getBody();
  
  try {
      bru.setEnvVar("KNOWLEDGE_NUGGET_ID", jsonRes.Data.KnowledgeNugget.id);
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(201);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Knowledge nugget record is created", function () {
  
      var expectedValue = "Some topic";
      
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('KnowledgeNugget');
      expect(jsonRes.Data.KnowledgeNugget).to.not.be.empty;
      expect(jsonRes.Data.KnowledgeNugget).to.have.property('id');
      expect(jsonRes.Data.KnowledgeNugget).to.have.property('TopicName');
      
      expect(jsonRes.Data.KnowledgeNugget.TopicName).equals(expectedValue);
      
  });
  
}

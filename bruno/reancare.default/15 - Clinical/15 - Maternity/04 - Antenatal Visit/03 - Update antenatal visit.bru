meta {
  name: Update
  type: http
  seq: 3
}

put {
  url: {{BASE_URL}}/clinical/maternity/maternity-pregnancies/{{PREGNANCY_ID}}/antenatal-visit/{{ANTENATAL_VISIT_ID}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{ADMIN_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "VisitId"                   : "123e4567-e89b-12d3-a456-426614174000",
      "ExternalVisitId"           : "ext-visit-456",
      "PregnancyId"               : "{{PREGNANCY_ID}}",
      "PatientUserId"             : "{{PATIENT_USER_ID}}",
      "DateOfVisit"               : "2024-08-10T10:00:00Z",
      "GestationInWeeks"          : 28,
      "FetalHeartRateBPM"         : 140,
      "FundalHeight"              :{
                                      "Weeks"       : "5",
                                      "Centimeters" : "28.5"
                                   },
      "DateOfNextVisit"           : "2024-08-24T10:00:00Z",
      "BodyWeightID"              : "weight-123",
      "BodyTemperatureId"         : "temp-456",
      "BloodPressureId"           : "bp-789"
  }
  
}

tests {
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("New Antenatal visit record Updated successfully", function () {
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('AntenatalVisit');
      
      expect(jsonRes.Data.AntenatalVisit).to.have.property('id');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('VisitId');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('PregnancyId');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('PatientUserId');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('DateOfVisit');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('GestationInWeeks');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('FundalHeight');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('DateOfNextVisit');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('BodyWeightID');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('BodyTemperatureId');
      expect(jsonRes.Data.AntenatalVisit).to.have.property('BloodPressureId');
  });
  
}

meta {
  name: Update
  type: http
  seq: 3
}

put {
  url: {{BASE_URL}}/clinical/maternity/maternity-pregnancies/{{PREGNANCY_ID}}/antenatal-medication/{{ANTENATAL_MEDICATION_ID}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{ADMIN_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "AnteNatalVisitId"   : "{{ANTENATAL_VISIT_ID}}",
      "PregnancyId"        : "{{PREGNANCY_ID}}",
      "VisitId"            : "visit-001",
      "Name"               : "Iron",
      "Given"              : "None",
      "MedicationId"       : "Med-120"
  }
  
}

tests {
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("New Antenatal Medication record is Updated", function () {
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('AntenatalMedication');
      
      expect(jsonRes.Data.AntenatalMedication).to.have.property('id');
      expect(jsonRes.Data.AntenatalMedication).to.have.property('AnteNatalVisitId');
      expect(jsonRes.Data.AntenatalMedication).to.have.property('PregnancyId');
      expect(jsonRes.Data.AntenatalMedication).to.have.property('VisitId');
      expect(jsonRes.Data.AntenatalMedication).to.have.property('Name');
      expect(jsonRes.Data.AntenatalMedication).to.have.property('Given');
      expect(jsonRes.Data.AntenatalMedication).to.have.property('MedicationId');
  });
  
}

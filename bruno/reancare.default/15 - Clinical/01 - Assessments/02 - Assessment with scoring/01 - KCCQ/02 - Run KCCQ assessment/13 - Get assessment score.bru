meta {
  name: Get assessment score
  type: http
  seq: 13
}

get {
  url: {{BASE_URL}}/clinical/assessments/{{ASSESSMENT_ID}}/score
  body: none
  auth: none
}

headers {
  Authorization: Bearer {{PATIENT_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

tests {
  var jsonRes = res.getBody();
  
  try {
      bru.setEnvVar("ASSESSMENT_QUESTION_ID", jsonRes.Data.Next.id);
      bru.setEnvVar("ASSESSMENT_NEXT_QUESTION_ID", jsonRes.Data.Next.id);
  
      for (i = 0; i < jsonRes.Data.Next.ChildrenQuestions.length; i++) {
          bru.setEnvVar("ASSESSMENT_LIST_QUESTION_ID_" + i, jsonRes.Data.Next.ChildrenQuestions[i].id);
      }
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Assessment is returned", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('AssessmentId');
  });
  
  
}

meta {
  name: Get patient by user id
  type: http
  seq: 7
}

get {
  url: {{BASE_URL}}/patients/{{PATIENT_USER_ID}}
  body: json
  auth: none
}

headers {
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
  Authorization: Bearer {{ADMIN_USER_JWT}}
}

script:pre-request {
  var password = "";
  bru.setEnvVar("API_CLIENT_PASSWORD", password);
  
}

tests {
  try {
      var jsonRes = res.getBody();
  }
  catch (error) {
      console.log(error.message);
  }
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Patient is created", function () {
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('Patient');
      expect(jsonRes.Data.Patient).to.not.be.empty;
      expect(jsonRes.Data.Patient).to.have.property('id');
      expect(jsonRes.Data.Patient).to.have.property('User');
      expect(jsonRes.Data.Patient.User).to.not.be.empty;
      expect(jsonRes.Data.Patient.User).to.have.property('id');
      expect(jsonRes.Data.Patient.User.Person).to.not.be.empty;
      expect(jsonRes.Data.Patient.User.Person).to.have.property('id');
  });
  
}

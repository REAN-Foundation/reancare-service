meta {
  name: Update
  type: http
  seq: 3
}

put {
  url: {{BASE_URL}}/clinical/maternity/maternity-pregnancies/{{PREGNANCY_ID}}/vaccinations/{{VACCINATION_ID}}
  body: json
  auth: none
}

headers {
  Authorization: Bearer {{ADMIN_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
  Content-Type: application/json
}

body:json {
  {
      "PregnancyId": "{{PREGNANCY_ID}}",
      "VaccineName": "Tetanus",
      "DoseNumber": 1,
      "DateAdministered": "2024-08-08T10:30:00Z",
      "MedicationId": "c234g2b3-56e7-8901-2345-67890abcdef1",
      "MedicationConsumptionId": "d345h3c4-67f8-9012-3456-78901abcdef2"
  }
}

tests {
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Vaccination record updated successfully ", function () {
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('Vaccination');
      
      expect(jsonRes.Data.Vaccination).to.have.property('id');
      expect(jsonRes.Data.Vaccination).to.have.property('PregnancyId');
      expect(jsonRes.Data.Vaccination).to.have.property('VaccineName');
      expect(jsonRes.Data.Vaccination).to.have.property('DoseNumber');
      expect(jsonRes.Data.Vaccination).to.have.property('DateAdministered');
      expect(jsonRes.Data.Vaccination).to.have.property('MedicationId');
      expect(jsonRes.Data.Vaccination).to.have.property('MedicationConsumptionId');
  });
}

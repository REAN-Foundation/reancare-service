meta {
  name: Get assessment by id
  type: http
  seq: 2
}

get {
  url: {{BASE_URL}}/clinical/symptom-assessments/{{SYMPTOM_ASSESSMENT_ID}}
  body: none
  auth: none
}

headers {
  Content-Type: application/json
  authorization: Bearer {{PATIENT_USER_JWT}}
  x-api-key: {{API_CLIENT_INTERNAL_KEY}}
}

tests {
  
  test("Request is successfull", function () {
      expect(res.getStatus()).to.equal(200);
      var jsonRes = res.getBody();
      expect(jsonRes.Status).to.eql('success');
  });
  
  test("Symptom assessment is returned", function () {
  
      var assessmentTemplateId = bru.getEnvVar("ASSESSMENT_TEMPLATE_ID");
  
      var jsonRes = res.getBody();
      expect(jsonRes.Data).to.have.property('SymptomAssessment');
      expect(jsonRes.Data.SymptomAssessment).to.have.property('id');
      expect(jsonRes.Data.SymptomAssessment).to.have.property('PatientUserId');
      expect(jsonRes.Data.SymptomAssessment).to.have.property('Title');
      expect(jsonRes.Data.SymptomAssessment).to.have.property('AssessmentTemplateId');
      expect(jsonRes.Data.SymptomAssessment).to.have.property('OverallStatus');
      expect(jsonRes.Data.SymptomAssessment).to.have.property('AssessmentDate');
      expect(jsonRes.Data.SymptomAssessment).to.have.property('SymptomsRecorded');
  
      expect(jsonRes.Data.SymptomAssessment.Title).equals("AHA Cardiac Rehab Assessment");
      expect(jsonRes.Data.SymptomAssessment.AssessmentTemplateId).equals(assessmentTemplateId);
  
      var assessmentDate = (jsonRes.Data.SymptomAssessment.AssessmentDate).split('T')[0];
      expect(assessmentDate).equals("2021-09-30");
  
  });
  
}
